notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: aEE3FILmPONrxBuo67BMy/TJaBaHCvdf52RrK3UiNI9hpTZhPZBAXen2WX/4zMST8yoaVmI2n394Mb/hP2aQ+biFLHF+6135Pf6AvVObYWkSzp0y4XDWDL4TJgvAggNFxPp6n80d1IAzbw5xsM+n/DKn2JnDRaxCPhT5mz39qh1X/ZGn4FKmiObRZSQFYqP84HWYuKBxzrOVAIm6ZLi9OFpvXlMPo8ezLQGDle0S5DMO8P6pDlPEXelG1Wil5xy5cQzW3Vf4OBxpZSEatgOdASXR0GtBveGVUpFcqc7KS3BncsQGr+SqtlIRPYgBHdlwBTfYtXhK0Q8s1GIms3eGd+iy4JzTO/MqXh9E6ONjp/gYSiFP/2/ixZJwykfgSWBH3xyZGjpMZE9O/SxGEYj0aCmBxeKgXM0iqA/QUq73LE4MlOQS/UUtteSJ0nTP1kzyHHXrxU5CBab9ZPM4ZJuTYev7CH1s2l1fuCt1OUQ2OmuPZ1QbFuYMYmAaCP0njH/uZiC3mjKIMzrept89B1eyFRthWgmjPbtdvdMpEbXigqjAGlQnyGx1lV8jxQre0+4jfSy10+KZNqpv2+oNT1bogHuZv+cODEvTh1ClbVk2r8oKZQIcabDfrn+Islq8rTJTdEacbxNgsBhJiKryhonXSIEFpIDuX/4VmrABBoSJ2NQ=
env:
  global:
  - secure: pf3n91tRIjAsgAaM3aVBKBH4h9zV88e0/7/8TSiAxW5vK1tn+4Mzq/G4/mYqY7D9B6mnT0+fOe5aznirt/IhuTo7U+BMBjxub88khp5kkaDpPvBS3JmzgwR/iT8R9SVYgX/B6nd+IBMqnvMW+QOCzfeN7XUoRxuARWOfUq0UYRPwVab0BgQhoxp9wCISTRrAXwhiXcvinWr1bTCM/XxYqZ862kXOM8/OXqNZzsoqS5tcW95vNqN+RNbMJP1NZ21u0klmwHp3YHn61vq6I4HcXzhW5P6miHHix7A0tYAjuGU6DrH826T3TkMjSe37Ef/wOfIUm1YjGeVFoDwQlI5qpTWgKAhcA9EDGFOjGkBlYQXzzpikV7lLrSK6VVefUdXKQjTuSFqo9kcJsdQetftdwYsrG5wdADkWVW9xnXrizDnUQNPsce//Wj2Q8hsyq/5I9Z2l4EHot//9JAwdWQOuXVKnm/6eQAkkr2BiQlIm+PiuWCwU5yic1SUfbZ3M6tupHMDAeEAydbhOoTcQm5sOkBXgu7SPtfnY+m2BMiBN175uVoT8X/25ogZrJHyn0JfgV4iAMRhPjqYqHjeD3unOzNPSvbfuTiu9yD1nLpFKlyfu+w18NaOt43hn11JMkPcd+bHYLyLGA1fciHW2r8Ms4ZF6pgGy1y8YUxoD56tUM/g=
  - secure: tHysK6fkL0eMn2Iflw+pOorSDRZD2XArp/9VLInwcv4GUvEHRkzzhQiiSuQOiQww/Yylz9bHcmEgwEeZ0o2+5M/Bon4+jModDGQRlFB6ZD3pQjm2MNGqkHVTcQjwwfIaNS+gdP8XpZGxcoRGXYpPTIs2V/Xqc/d+I8guZ7pTeMtfy6u4HqZXhjcbSHhb2Wp9N1fcaiC7ARXzYG8IHv4HRz/BUXnZLm2PmMfaHOpPyWw/wmnf8cMYt3EiViAG5vvNkFinVgypl1h4zjBGZoANml/zqkGHIsPylB9e2uBZqwFaNrxpxsFC04Yjl6ybxhXuVd+4V71gq0SiwIxR2e0Ot1XizyxZmxqAGTP3zBAAcZzWsIUYRiCstP/JPKSN5h8MRBNzxnO68tbqEaHaf753WPXxBZ6u/Em6WbZMJXN6oVxXgEOsLvOrUt/tpnjKmlEtpjZvAQ6vm4B3EfKLjsBH23s2PcgyQrUkfA8Q0Ho3wFVGC/wku8eMpG+M5es/CXyGcFz4oOhkZS3wB3bPLB1wolWV7HbMKCzT8n1BBpDgmZ9xfgoGC/95hYv209t01airG/3HORxr20Lly7aMMINN36op+RasTESghstFEzxS8JIKyoVi0gPN1qfGPZWKmZ+S5Ehqj+Tu37hYukqoRtmHlj8/St25mKK/3CAVrcriuZU=
matrix:
  fast_finish: true
  include:
  - name: Tests
    language: node_js
    node_js: '10'
    cache:
      yarn: true
      directories:
      - "~/.cache"
      - ".eslintcache"
    script:
      - yarn check-all
      - yarn build
    after_success:
      - travis_wait yarn ndla-scripts now-travis
    before_script:
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
  - name: Release
    language: python
    if: branch = master AND type = push
    python: 3.7
    dist: focal
    services:
      - docker
    cache: pip
    before_install:
      - pip install awscli
      - "$(aws ecr get-login --no-include-email --region eu-west-1)"
      - git clone --depth 1 https://knowit-at-ndla:$TRAVIS_RELEASE_GITHUB_TOKEN@github.com/ndlano/deploy.git
        ../deploy
      - export NDLA_HOME=$(realpath $(pwd)/../)
      - export NDLA_DEPLOY=$NDLA_HOME/deploy
      - export DEPLOY_VERSION=$(git -C $NDLA_DEPLOY rev-parse --short=7 HEAD)
      - export DEPLOY_DOCKER_REPO=784120951859.dkr.ecr.eu-west-1.amazonaws.com/ndla/deploy
      - docker pull $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION || true
    install:
      - eval "$($NDLA_DEPLOY/scripts/bin/ndla init -)"
    env:
      - SSH_AUTH_SOCK=/tmp/mock_sock
    script:
      - ndla release listing-frontend --update-chart
    before_cache:
      - docker push $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION
    before_script:
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
  allow_failures:
  - name: Release
